{"version":3,"sources":["extensions/auth_provider.js","extensions/http_client.js","consts.js","extensions/myDataProvider.js","components/conditional/Conditional.jsx","extensions/create_resource.js","components/unit_input/UnitInput.jsx","resources/questions.js","resources/activities.js","components/question_input/QuestionInput.jsx","resources/completion_questions.js","resources/default_activities.js","resources/default_expected_values.js","resources/default_questions.js","resources/default_visibilities.js","resources/default_roles.js","resources/documents.js","resources/expected_values.js","resources/follow_up_activities.js","resources/involvements.js","resources/issue_notes.js","resources/issues.js","resources/multi_choice_options.js","resources/personalised_text.js","resources/programmes.js","resources/project_activities.js","resources/project_questions.js","resources/project_roles.js","resources/project_types.js","resources/projects.js","resources/registrations.js","resources/responses.js","resources/roles.js","resources/source_materials.js","resources/topics.js","resources/units.js","resources/user_interface_text.js","resources/users.js","resources/visibilities.js","App.js","serviceWorker.js","index.js"],"names":["authProvider","type","params","AUTH_LOGIN","localStorage","setItem","btoa","username","password","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","status","reject","AUTH_CHECK","getItem","httpClient","url","options","headers","Headers","Accept","token","locale","set","fetchUtils","fetchJson","HOST","window","location","hostname","dataProvider","jsonServerProvider","form","FormData","myDataProvider","createMany","resource","data","console","log","create","filter","photo","href","includes","undefined","rawFile","text","name","order","question_id","append","fetch","method","body","then","response","json","id","file","update","Conditional","when","children","FormDataConsumer","f","formData","props","formFields","showLocale","newRecord","SimpleForm","TextField","source","TextInput","label","defaultValue","filters","Filter","alwaysOn","ListActions","filterValues","useListContext","TopToolbar","CreateButton","ExportButton","FileUploadButton","useState","open","setOpen","userReport","setUserReport","Modal","onClose","aria-labelledby","aria-describedby","Box","sx","style","mt","Button","variant","component","onChange","e","target","files","position","top","left","transform","width","bgcolor","border","boxShadow","p","createResource","gridFields","edit","Edit","Create","list","List","perPage","filterDefaultValues","actions","Datagrid","rowClick","DateField","showTime","grid","UnitInput","ReferenceInput","reference","allowEmpty","SelectInput","optionText","unit_type","RadioButtonGroupInput","BooleanInput","d","NumberInput","TypeSelector","UnitSelector","ReferenceField","NumberField","BooleanField","linkType","QuestionInput","topic_id","TopicSelector","QuestionSelector","FileInput","FileField","title","multiline","validate","required","ImageField","ImageInput","accept","App","Admin","Resource","activities","completion_questions","default_activities","default_expected_values","default_questions","default_roles","default_visibilities","documents","expected_values","follow_up_activities","involvements","issue_notes","issues","multi_choice_options","personalised_text","programmes","project_activities","project_questions","project_roles","project_types","projects","questions","registrations","responses","roles","source_materials","topics","units","user_interface_text","users","visibilities","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21cc1bc3.chunk.js","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\n\nconst authProvider = (type, params) => {\n  if (type === AUTH_LOGIN) {\n    localStorage.setItem(\"token\", btoa(`${params.username}:${params.password}`));\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem(\"token\");\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_ERROR) {\n    const { status } = params;\n    if (status === 401 || status === 403) {\n        localStorage.removeItem(\"token\");\n        return Promise.reject();\n    }\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem(\"token\")\n        ? Promise.resolve()\n        : Promise.reject();\n  }\n\n  return Promise.reject(\"Unknown method\");\n};\n\nexport default authProvider;\n","import { fetchUtils } from \"react-admin\";\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n\n  const token = localStorage.getItem(\"token\");\n  const locale = localStorage.getItem(\"locale\");\n\n  if (token) {\n    options.headers.set(\"Authorization\", `Basic ${token}`);\n  }\n\n  if (locale) {\n    options.headers.set(\"Accept-Language\", locale);\n  }\n\n  return fetchUtils.fetchJson(url, options);\n};\n\nexport default httpClient;\n","let host;\n\nif (window.location.hostname === \"localhost\") {\n  host = \"http://localhost:3000\";\n} else if (window.location.hostname === \"staging-field-admin.truefootprint.com\") {\n  host = \"https://staging-field-backend.truefootprint.com\";\n} else {\n  host = \"https://field-backend.truefootprint.com\";\n}\n\nexport const HOST = host;\n","import httpClient from \"./http_client\";\nimport withFileUpload from \"./with_file_upload\";\nimport withLocale from \"./with_locale\";\nimport { HOST } from \"../consts\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst dataProvider = jsonServerProvider(HOST, httpClient);\nconst token = localStorage.getItem(\"token\");\nconst headers = new Headers();\nlet form = new FormData();\n\nconst myDataProvider = {\n  ...dataProvider,\n  createMany: (resource, params) => {\n    const items = params.data;\n    console.log(\"CSV22\")\n    console.log(params.data)\n    // Handle create many here\n  },\n  create: (resource, params) => {\n    const locale = (params.data || {}).locale || (params.filter || {}).locale;\n    console.log(\"in my data provider\");\n    console.log(params.data);\n    if (typeof(locale) !== \"undefined\") {\n      localStorage.setItem(\"locale\", locale);\n    }\n\n    if (typeof params.data.photo !== \"undefined\" && window.location.href.includes(\"multi_choice_options\")) {\n      if (params.data.photo.rawFile !== undefined) {\n        let rawFile = params.data.photo.rawFile;\n        form.set(\"photo\", rawFile);\n      }\n      form.set(\"text\", params.data.text);\n      form.set(\"name\", params.data.name);\n      form.set(\"order\", params.data.order);\n      form.set(\"question_id\", params.data.question_id);\n      \n      headers.append(\"Authorization\", `Basic ${token}`);\n      headers.append(\"Accept-Language\", localStorage.getItem(\"locale\"));\n\n      return fetch(`${HOST}/${resource}`, {\n        method: \"POST\",\n        body: form,\n        headers: headers,\n      })\n        .then((response) => response.json())\n        .then((json) => ({ data: { id: json.id } }));\n    }\n\n    if (typeof params.data.file !== \"undefined\" && window.location.href.includes(\"documents\")) {\n      if (params.data.file.rawFile !== undefined) {\n        let rawFile = params.data.file.rawFile;\n        form.set(\"file\", rawFile);\n        form.set(\"name\", rawFile.name); \n      }    \n          \n      headers.append(\"Authorization\", `Basic ${token}`);\n      headers.append(\"Accept-Language\", localStorage.getItem(\"locale\"));\n      return fetch(`${HOST}/${resource}`, {\n        method: \"POST\",\n        body: form,\n        headers: headers,\n      })\n        .then((response) => response.json())\n        .then((json) => ({ data: { id: json.id } }));\n    }\n\n    if (typeof params.data.photo == \"undefined\" || typeof params.data.file == \"undefined\") {\n      // fallback to the default implementation\n      return dataProvider.create(resource, params);\n    }\n  },\n  update: (resource, params) => {\n    const locale = (params.data || {}).locale || (params.filter || {}).locale;\n\n    if (typeof locale !== \"undefined\") {\n      localStorage.setItem(\"locale\", locale);\n    }\n    if (typeof params.data.photo !== \"undefined\" && window.location.href.includes(\"multi_choice_options\")) {\n      if (typeof params.data.photo.rawFile !== \"undefined\") {\n        let rawFile = params.data.photo.rawFile;\n        form.set(\"photo\", rawFile);\n      }\n      form.set(\"name\", params.data.name);\n      form.set(\"order\", params.data.order);\n      form.set(\"question_id\", params.data.question_id);\n      form.set(\"text\", params.data.text);\n\n      headers.append(\"Authorization\", `Basic ${token}`);\n      headers.append(\"Accept-Language\", localStorage.getItem(\"locale\"));\n      return fetch(`${HOST}/${resource}/${params.data.id}`, {\n        method: \"PUT\",\n        body: form,\n        headers: headers,\n      })\n        .then((response) => response.json())\n        .then((json) => ({ data: { id: json.id } }));\n    }\n\n    if (typeof params.data.file !== \"undefined\" && window.location.href.includes(\"documents\")) {\n      let rawFile = params.data.file.rawFile;\n      let form = new FormData();\n\n      form.set(\"file\", rawFile);\n      form.set(\"name\", rawFile.name);\n\n      const token = localStorage.getItem(\"token\");\n      const headers = new Headers();\n\n      headers.append(\"Authorization\", `Basic ${token}`);\n\n      return fetch(`${HOST}/${resource}/${params.data.id}`, { method: \"PUT\", body: form, headers: headers })\n        .then((response) => response.json())\n        .then((json) => ( { data: { id: json.id }} ))\n    }\n\n    if (typeof params.data.photo == \"undefined\" || typeof params.data.file == \"undefined\") {\n      // fallback to the default implementation\n      return dataProvider.create(resource, params);\n    }\n  },\n};\n\nexport default myDataProvider;\n","import React from \"react\";\nimport { FormDataConsumer } from \"react-admin\";\n\nconst Conditional = ({ when, children }) => (\n  <FormDataConsumer>{f =>\n    f && f.formData && when(f.formData) && children\n  }</FormDataConsumer>\n);\n\nexport default Conditional;\n","import React, { useState } from \"react\";\nimport { HOST } from \"../consts\";\nimport {\n  useRecordContext,\n  CreateButton,\n  ExportButton,\n  SimpleForm,\n  TextField,\n  DateField,\n  Datagrid,\n  Edit,\n  Create,\n  List,\n  Filter,\n  TextInput,\n  TopToolbar,\n} from \"react-admin\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { useFilePicker } from \"use-file-picker\";\nimport { useListContext } from 'react-admin';\n\nconst form = (props, formFields, showLocale, newRecord = true) => {\n  //const newRecord = props.location.pathname.match(/create/);\n  const locale = localStorage.getItem(\"locale\");\n  return (\n    <SimpleForm>\n      {newRecord ? null : <TextField source=\"id\" />}\n      {showLocale ? <TextInput label=\"Locale\" source=\"locale\" defaultValue={locale} /> : null}\n      {formFields(props)}\n      {newRecord ? null : <TextField source=\"created_at\" />}\n      {newRecord ? null : <TextField source=\"updated_at\" />}\n    </SimpleForm>\n  );\n};\n\nconst grid = (props, gridFields) => (\n  <Datagrid rowClick=\"edit\">\n    <TextField source=\"id\" />\n    {gridFields(props)}\n    <DateField source=\"created_at\" showTime />\n    <DateField source=\"updated_at\" showTime />\n  </Datagrid>\n);\n\nconst filters = (showLocale) => {\n\n  return (<Filter>\n    {showLocale && <TextInput label=\"Locale\" source=\"locale\" alwaysOn />}\n  </Filter>)\n};\n\nconst ListActions = (props) => {\n  const { filterValues } = useListContext();\n  localStorage.setItem(\"locale\", filterValues.locale);\n  return (<TopToolbar>\n    <CreateButton />\n    <ExportButton />\n    <FileUploadButton />\n  </TopToolbar>)\n};\n\nconst FileUploadButton = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [userReport, setUserReport] = useState(\"\");\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => { setUserReport(\"\");setOpen(false)};\n\n  const activateLasers = () => {\n    console.log(\"chanda chance\");\n  };\n  const chanda = (e) => {\n    setOpen(true);\n    setUserReport(\"Uploading...\");\n    const token = localStorage.getItem(\"token\");\n    console.log(token);\n    const headers = new Headers();\n    const formData = new FormData();\n\n    headers.append(\"Authorization\", `Basic ${token}`);\n    headers.append(\"Accept-Language\", localStorage.getItem(\"locale\"));\n    formData.append(\"file\", e.target.files[0]);\n    \n    fetch(`${HOST}/batch/users`, {\n      method: \"POST\",\n      body: formData,\n      headers: headers,\n    })\n      .then((response) => response.json()).then((json) => {\n        setOpen(true);\n        console.log(\"THE RESPONSE\");\n        console.log(json.data);\n        setUserReport(json.data);\n      });\n  };\n  return (\n    // <form\n    //   id=\"myForm\"\n    //   action=\"/upload\"\n    //   enctype=\"multipart/form-data\"\n    //   method=\"post\"\n    // >\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          {/* <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Text in a modal\n          </Typography> */}\n          <pre id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {userReport}\n          </pre>\n        </Box>\n      </Modal>\n      \n      <Button variant=\"contained\" component=\"label\">\n        <input type=\"file\" onChange={chanda} />\n      </Button>\n    </>\n    // </form>\n  );\n};\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"60%\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst createResource = ({ name, formFields, gridFields, showLocale }) => ({\n  name: name,\n  edit: (props) => (\n    <Edit {...props}>{form(props, formFields, showLocale, false)}</Edit>\n  ),\n  create: (props) => (\n    <Create {...props}>{form(props, formFields, showLocale)}</Create>\n  ),\n  list: (props) => (\n    <List\n      {...props}\n      perPage={100}\n      filters={filters(showLocale)}\n      filterDefaultValues={{ locale: \"en\" }}\n      actions={<ListActions />}\n    >\n      {grid(props, gridFields)}\n    </List>\n  ),\n});\n\nexport default createResource;\n","import React from \"react\";\nimport { ReferenceInput, SelectInput, FormDataConsumer } from \"react-admin\";\n\nconst UnitInput = {};\n\nUnitInput.TypeSelector = () => (\n  <ReferenceInput source=\"unit_type\" reference=\"unit_types\" allowEmpty>\n    <SelectInput optionText=\"id\" />\n  </ReferenceInput>\n);\n\nUnitInput.UnitSelector = () => (\n  <FormDataConsumer>{f => f && f.formData &&\n    <ReferenceInput source=\"unit_id\" reference=\"units\" perPage={100} filter={{ type: f.formData.unit_type }} allowEmpty>\n      <SelectInput optionText=\"official_name\" />\n    </ReferenceInput>\n  }</FormDataConsumer>\n);\n\nexport default UnitInput;\n","import React from \"react\";\nimport { TextInput, ReferenceInput, SelectInput, RadioButtonGroupInput, NumberInput, BooleanInput } from \"react-admin\";\nimport { TextField, ReferenceField, NumberField, BooleanField } from \"react-admin\";\nimport Conditional from \"../components/conditional\";\nimport createResource from \"../extensions/create_resource\";\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"questions\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"text\" />,\n\n    <ReferenceInput source=\"topic_id\" reference=\"topics\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"type\" reference=\"question_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <BooleanInput label=\"Isssues Possible\" source=\"issues_possible\" />,\n\n    <Conditional when={d => d.type === \"FreeTextQuestion\"}>\n      <NumberInput source=\"expected_length\" />\n    </Conditional>,\n\n    <Conditional when={d => d.type === \"MultiChoiceQuestion\"}>\n      <BooleanInput source=\"multiple_answers\" />\n    </Conditional>,\n\n    <ReferenceInput source=\"data_type\" reference=\"question_data_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"text\" />,\n\n    <ReferenceField source=\"topic_id\" reference=\"topics\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"type\" />,\n    <NumberField source=\"expected_length\" />,\n    <BooleanField source=\"multiple_answers\" />,\n    <TextField source=\"data_type\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty >\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty >\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"activities\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, SelectInput, FormDataConsumer } from \"react-admin\";\n\nconst QuestionInput = {};\n\nQuestionInput.TopicSelector = () => (\n  <ReferenceInput source=\"topic_id\" reference=\"topics\" perPage={150} >\n    <SelectInput optionText=\"name\" />\n  </ReferenceInput>\n);\n\nQuestionInput.QuestionSelector = () => (\n  <FormDataConsumer>{f => f && f.formData &&\n    <ReferenceInput source=\"question_id\" reference=\"questions\" perPage={100} filter={{ topic_id: f.formData.topic_id }}>\n      <SelectInput optionText=\"text\" />\n    </ReferenceInput>\n  }</FormDataConsumer>\n);\n\nexport default QuestionInput;\n","import React from \"react\";\nimport { ReferenceField, TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\nimport QuestionInput from \"../components/question_input\";\n\nexport default createResource({\n  name: \"completion_questions\",\n\n  formFields: (props) => [\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <TextInput source=\"completion_value\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <TextField source=\"completion_value\" />,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"default_activities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_type_id\" reference=\"project_types\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_type_id\" reference=\"project_types\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, ReferenceField, SelectInput, TextField, TextInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nimport QuestionInput from \"../components/question_input\";\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"default_expected_values\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" allowEmpty perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"value\" />,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"activity_id\" reference=\"activities\" allowEmpty>\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty >\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty >\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\nimport QuestionInput from \"../components/question_input\";\n\nexport default createResource({\n  name: \"default_questions\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <NumberInput source=\"order\" />,\n\n    <NumberInput label=\"Parent Question id\" source=\"parent_question_id\" />,\n    <TextInput label=\"Question response trigger\" source=\"child_response_trigger\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, RadioButtonGroupInput, NumberField, SelectInput, NumberInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"default_visibilities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"default_visibility_subject_types\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"role_id\" reference=\"roles\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceField source=\"role_id\" reference=\"roles\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"default_roles\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_type_id\" reference=\"project_types\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"role_id\" reference=\"roles\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_type_id\" reference=\"project_types\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"role_id\" reference=\"roles\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />\n  ],\n});\n","import React from \"react\";\nimport { FileInput, FileField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"documents\",\n\n  formFields: (props) => [\n    <FileInput source=\"file\">\n      <FileField source=\"url\" title=\"name\" />\n    </FileInput>,\n  ],\n\n  gridFields: (props) => [\n    <FileField source=\"file.url\" title=\"file.name\" label=\"File\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, NumberInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"expected_values\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <NumberInput label=\"Project question id\" source=\"project_question_id\" />,\n\n    <TextInput source=\"value\" />,\n    <TextInput source=\"text\" />,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_question_id\" reference=\"project_questions\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Question\" source=\"project_question_id\" reference=\"project_questions\" linkType={false}>\n      <ReferenceField source=\"question_id\" reference=\"questions\" linkType={false}>\n        <TextField source=\"text\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n    <TextField source=\"text\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty>\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty>\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, SelectInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"follow_up_activities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"follow_up_activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"follow_up_activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, NumberInput, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"involvements\",\n\n  formFields: (props) => [\n    <NumberInput label=\"Project activity id\" source=\"project_activity_id\" />,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_activity_id\" reference=\"project_activities\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { BooleanInput, TextInput, ReferenceInput, SelectInput } from \"react-admin\";\nimport { BooleanField, TextField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"issue_notes\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"issue_id\" reference=\"issues\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"text\" />,\n    <TextInput source=\"photos_json\" />,\n    <BooleanInput source=\"resolved\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"issue_id\" reference=\"issues\">\n      <TextField source=\"uuid\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"text\" />,\n    <TextField source=\"photos_json\" />,\n    <BooleanField source=\"resolved\" />,\n  ],\n});\n","import React from \"react\";\nimport { NumberInput, TextInput, ReferenceInput, SelectInput, RadioButtonGroupInput } from \"react-admin\";\nimport { NumberField, TextField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"issues\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"issue_subject_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"description\" multiline/>,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"uuid\" />,\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"description\" />,\n  ],\n});\n","import React from \"react\";\nimport { required, ImageField, ImageInput, TextInput, TextField, ReferenceInput, SelectInput, NumberInput, NumberField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nconst PreviewImage = ({ record, source }) => {\n  if (typeof (record) == \"string\") {\n      record = {\n          [source]: record\n      }\n  }\n  return <ImageField record={record} source={source} />\n}\n\nexport default createResource({\n  name: \"multi_choice_options\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <ReferenceInput source=\"question_id\" \n    reference=\"questions\" filter={{ type: \"MultiChoiceQuestion\" }} \n    perPage={100}>\n      <SelectInput optionText=\"text\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"text\" validate={[required()]} />,\n\n    <NumberInput source=\"order\" />,\n    <ImageField source=\"photo\" title=\"title\" />,\n    <ImageInput source=\"photo\" label=\"Related pictures\" accept=\"image/*\">\n         <ImageField source=\"src\" title=\"title\" />\n    </ImageInput>\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <TextField source=\"text\" />,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, ReferenceInput, ReferenceField, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"personalised_text\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <ReferenceInput source=\"user_interface_text_id\" reference=\"user_interface_text\" perPage={100}>\n      <SelectInput optionText=\"key\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"project_role_id\" />,\n    <TextInput source=\"value\" multiline />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"user_interface_text_id\" reference=\"user_interface_text\">\n      <TextField source=\"key\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Project\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"project_id\" reference=\"projects\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <ReferenceField label=\"Role\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"role_id\" reference=\"roles\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"programmes\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <TextInput source=\"description\" multiline/>,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n    <TextField source=\"description\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, SelectInput, ReferenceField, NumberInput, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"project_activities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_id\" reference=\"projects\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_id\" reference=\"projects\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, NumberInput, TextField, ReferenceField, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\nimport QuestionInput from \"../components/question_input\";\n\nexport default createResource({\n  name: \"project_questions\",\n\n  formFields: (props) => [\n    <NumberInput label=\"Project activity id\" source=\"project_activity_id\" />,\n\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n    \n    <NumberInput source=\"order\" />,\n    <NumberInput label=\"Parent Project Question id\" source=\"parent_project_question_id\" />,    \n    <TextInput label=\"Child Project Question response trigger\" source=\"child_response_trigger\" />\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_activity_id\" reference=\"project_activities\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Project\" source=\"project_activity_id\" reference=\"project_activities\" linkType={false}>\n      <ReferenceField source=\"project_id\" reference=\"projects\" linkType={false}>\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <ReferenceField label=\"Activity\" source=\"project_activity_id\" reference=\"project_activities\" linkType={false}>\n      <ReferenceField source=\"activity_id\" reference=\"activities\" linkType={false}>\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"project_roles\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_id\" reference=\"projects\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"role_id\" reference=\"roles\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_id\" reference=\"projects\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"role_id\" reference=\"roles\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { ImageInput, ImageField, TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"project_types\",\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <ImageField source=\"photo\" title=\"title\" />,\n    <ImageInput source=\"photo\" label=\"Banner Image\" accept=\"image/*\">\n      <ImageField source=\"src\" title=\"title\" />\n    </ImageInput>,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport {\n  ImageInput,\n  ImageField,\n  TextInput,\n  TextField,\n  ReferenceInput,\n  SelectInput,\n  ReferenceField,\n} from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"projects\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <ReferenceInput source=\"programme_id\" reference=\"programmes\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput\n      source=\"project_type_id\"\n      reference=\"project_types\"\n      perPage={100}\n    >\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"name\" />,\n    <ImageField source=\"photo\" title=\"title\" />,\n    <ImageInput source=\"photo\" label=\"Banner Image\" accept=\"image/*\">\n      <ImageField source=\"src\" title=\"title\" />\n    </ImageInput>,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"programme_id\" reference=\"programmes\">\n      <TextField source=\"nattme\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"project_type_id\" reference=\"project_types\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, TextInput, ReferenceInput, ReferenceField, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"registrations\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n    <TextInput source=\"user_id\"/>,\n    <TextInput source=\"project_role_id\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Project\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"project_id\" reference=\"projects\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <ReferenceField label=\"Role\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"role_id\" reference=\"roles\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, NumberInput, ReferenceInput, SelectInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"responses\",\n\n  formFields: (props) => [\n    <NumberInput label=\"Project question id\" source=\"project_question_id\" />,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"value\" />,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_question_id\" reference=\"project_questions\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty >\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty >\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"roles\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <TextInput source=\"display_name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, RadioButtonGroupInput, SelectInput, NumberInput } from \"react-admin\";\nimport { TextField, NumberField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"source_materials\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"source_material_subject_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"document_id\" reference=\"documents\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"page\" allowEmpty />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceField source=\"document_id\" reference=\"documents\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <NumberField source=\"page\" allowEmpty />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"topics\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, TextInput, ReferenceInput, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"units\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"official_name\" />,\n\n    <ReferenceInput source=\"type\" reference=\"unit_types\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"singular\" />,\n    <TextInput source=\"plural\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"official_name\" />,\n    <TextField source=\"type\" />,\n    <TextField source=\"singular\" />,\n    <TextField source=\"plural\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"user_interface_text\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"key\" />,\n    <TextInput source=\"value\" multiline />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"key\" />,\n    <TextField source=\"value\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"users\",\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <TextInput source=\"country_code\" />,\n    <TextInput source=\"phone_number\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"interviewer_id\" />,\n    <TextField source=\"name\" />,\n    <TextField source=\"country_code\" />,\n    <TextField source=\"phone_number\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, RadioButtonGroupInput, NumberField, SelectInput, NumberInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"visibilities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"visibility_subject_types\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"visible_to_type\" reference=\"visibility_visible_to_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Visible to id\" source=\"visible_to_id\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <TextField source=\"visible_to_type\" />,\n    <NumberField label=\"Visible to id\" source=\"visible_to_id\" />,\n  ],\n});\n","import React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport authProvider from \"./extensions/auth_provider\";\nimport httpClient from \"./extensions/http_client\";\nimport withFileUpload from \"./extensions/with_file_upload\";\nimport withLocale from \"./extensions/with_locale\";\nimport myDataProvider from \"./extensions/myDataProvider\";\nimport { HOST } from \"./consts\";\n\nimport questions from \"./resources/questions\";\nimport activities from \"./resources/activities\";\nimport completion_questions from \"./resources/completion_questions\";\nimport default_activities from \"./resources/default_activities\";\nimport default_expected_values from \"./resources/default_expected_values\";\nimport default_questions from \"./resources/default_questions\";\nimport default_visibilities from \"./resources/default_visibilities\";\nimport default_roles from \"./resources/default_roles\";\nimport documents from \"./resources/documents\";\nimport expected_values from \"./resources/expected_values\";\nimport follow_up_activities from \"./resources/follow_up_activities\";\nimport involvements from \"./resources/involvements\";\nimport issue_notes from \"./resources/issue_notes\";\nimport issues from \"./resources/issues\";\nimport multi_choice_options from \"./resources/multi_choice_options\";\nimport personalised_text from \"./resources/personalised_text\";\nimport programmes from \"./resources/programmes\";\nimport project_activities from \"./resources/project_activities\";\nimport project_questions from \"./resources/project_questions\";\nimport project_roles from \"./resources/project_roles\";\nimport project_types from \"./resources/project_types\";\nimport projects from \"./resources/projects\";\nimport registrations from \"./resources/registrations\";\nimport responses from \"./resources/responses\";\nimport roles from \"./resources/roles\";\nimport source_materials from \"./resources/source_materials\";\nimport topics from \"./resources/topics\";\nimport units from \"./resources/units\";\nimport user_interface_text from \"./resources/user_interface_text\";\nimport users from \"./resources/users\";\nimport visibilities from \"./resources/visibilities\";\n\n//withLocale(\n//const dataProvider = withFileUpload(myDataProvider);\n\n\nconst App = () => (\n  <Admin dataProvider={myDataProvider} authProvider={authProvider}>\n    <Resource {...activities} />\n    <Resource {...completion_questions} />\n    <Resource {...default_activities} />\n    <Resource {...default_expected_values} />\n    <Resource {...default_questions} />\n    <Resource {...default_roles} />\n    <Resource {...default_visibilities} />\n    <Resource {...documents} />\n    <Resource {...expected_values} />\n    <Resource {...follow_up_activities} />\n    <Resource {...involvements} />\n    <Resource {...issue_notes} />\n    <Resource {...issues} />\n    <Resource {...multi_choice_options} />\n    <Resource {...personalised_text} />\n    <Resource {...programmes} />\n    <Resource {...project_activities} />\n    <Resource {...project_questions} />\n    <Resource {...project_roles} />\n    <Resource {...project_types} />\n    <Resource {...projects} />\n    <Resource {...questions} />\n    <Resource {...registrations} />\n    <Resource {...responses} />\n    <Resource {...roles} />\n    <Resource {...source_materials} />\n    <Resource {...topics} />\n    <Resource {...units} />\n    <Resource {...user_interface_text} />\n    <Resource {...users} />\n    <Resource {...visibilities} />\n\n    <Resource name=\"default_visibility_subject_types\" />\n    <Resource name=\"question_types\" />\n    <Resource name=\"question_data_types\" />\n    <Resource name=\"issue_subject_types\" />\n    <Resource name=\"source_material_subject_types\" />\n    <Resource name=\"visibility_subject_types\" />\n    <Resource name=\"visibility_visible_to_types\" />\n    <Resource name=\"unit_types\" />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}